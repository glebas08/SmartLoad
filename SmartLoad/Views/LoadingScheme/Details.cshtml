@* @model SmartLoad.Models.LoadingScheme

@{
    ViewData["Title"] = "Детали схемы загрузки";
}

<h1>Детали схемы загрузки</h1>

<div class="row">
    <div class="col-md-12">
        <div class="card mb-4">
            <div class="card-header">
                <h5>Информация о схеме загрузки</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <dl class="row">
                            <dt class="col-sm-4">Транспортное средство:</dt>
                            <dd class="col-sm-8">@Model.Vehicle.RegistrationNumber (@Model.Vehicle.VehicleType.Name)</dd>

                            <dt class="col-sm-4">Маршрут:</dt>
                            <dd class="col-sm-8">@Model.Route.Name</dd>

                            <dt class="col-sm-4">Дата загрузки:</dt>
                            <dd class="col-sm-8">@Model.LoadingDate.ToString("dd.MM.yyyy HH:mm")</dd>

                            <dt class="col-sm-4">Статус:</dt>
                            <dd class="col-sm-8">@Model.Status</dd>
                        </dl>
                    </div>
                    <div class="col-md-6">
                        <dl class="row">
                            <dt class="col-sm-4">Примечания:</dt>
                            <dd class="col-sm-8">@Model.Notes</dd>

                            <dt class="col-sm-4">Количество продуктов:</dt>
                            <dd class="col-sm-8">@Model.LoadingProducts.Count</dd>
                        </dl>
                    </div>
                </div>
            </div>
        </div>

        <div class="card mb-4">
            <div class="card-header">
                <h5>Схема размещения груза</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12">
                        <div id="loadingSchemeContainer" style="width: 100%; height: 500px; border: 1px solid #ccc; position: relative;">
                            <!-- Здесь будет отображаться 3D-схема размещения груза -->
                        </div>
                    </div>
                </div>

                <div class="row mt-4">
                    <div class="col-md-12">
                        <h6>Список размещенных продуктов:</h6>
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Продукт</th>
                                    <th>Точка выгрузки</th>
                                    <th>Координаты (X, Y, Z)</th>
                                    <th>Вес (кг)</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var loadingProduct in Model.LoadingProducts)
                                {
                                    <tr>
                                        <td>@loadingProduct.Product.Name</td>
                                        <td>@loadingProduct.RoutePoint.Name</td>
                                        <td>(@loadingProduct.PositionX, @loadingProduct.PositionY, @loadingProduct.PositionZ)</td>
                                        <td>@loadingProduct.Product.Weight</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div>
            <a asp-controller="Home" asp-action="Index" class="btn btn-secondary">Вернуться на главную</a>
            <a asp-action="Print" asp-route-id="@Model.Id" class="btn btn-primary">Печать схемы загрузки</a>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/three@0.132.2/build/three.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/three@0.132.2/examples/js/controls/OrbitControls.js"></script>

    <script>
        // Функция для инициализации 3D-визуализации
        document.addEventListener('DOMContentLoaded', function() {
            var container = document.getElementById('loadingSchemeContainer');
            var width = container.clientWidth;
            var height = container.clientHeight;

            // Создаем сцену, камеру и рендерер
            var scene = new THREE.Scene();
            scene.background = new THREE.Color(0xf0f0f0);

            var camera = new THREE.PerspectiveCamera(45, width / height, 0.1, 1000);
            camera.position.set(10, 10, 10);

            var renderer = new THREE.WebGLRenderer({ antialias: true });
            renderer.setSize(width, height);
            container.appendChild(renderer.domElement);

            // Добавляем контроль орбиты для вращения камеры
            var controls = new THREE.OrbitControls(camera, renderer.domElement);
            controls.enableDamping = true;
            controls.dampingFactor = 0.25;

            // Добавляем свет
            var ambientLight = new THREE.AmbientLight(0x404040);
            scene.add(ambientLight);

            var directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);
            directionalLight.position.set(1, 1, 1);
            scene.add(directionalLight);

            // Создаем полуприцеп
            var trailerWidth = @Model.Vehicle.VehicleType.Width;
            var trailerLength = @Model.Vehicle.VehicleType.Length;
            var trailerHeight = @Model.Vehicle.VehicleType.Height;

            var trailerGeometry = new THREE.BoxGeometry(trailerLength, trailerHeight, trailerWidth);
            var trailerMaterial = new THREE.MeshPhongMaterial({
                color: 0xcccccc,
                transparent: true,
                opacity: 0.3,
                wireframe: false
            });
            var trailer = new THREE.Mesh(trailerGeometry, trailerMaterial);
            trailer.position.set(trailerLength/2, trailerHeight/2, trailerWidth/2);
            scene.add(trailer);

            // Добавляем продукты
        @foreach (var loadingProduct in Model.LoadingProducts)
        {
            <text>
                    var productGeometry = new THREE.BoxGeometry(
                @loadingProduct.Product.Length,
                @loadingProduct.Product.Height,
                @loadingProduct.Product.Width
                    );

                    // Генерируем случайный цвет для продукта
                    var productColor = new THREE.Color(
                        0.5 + Math.random() * 0.5,
                        0.5 + Math.random() * 0.5,
                        0.5 + Math.random() * 0.5
                    );

                    var productMaterial = new THREE.MeshPhongMaterial({ color: productColor });
                    var productMesh = new THREE.Mesh(productGeometry, productMaterial);

                    // Устанавливаем позицию продукта
                    productMesh.position.set(
                @loadingProduct.PositionX + @loadingProduct.Product.Length/2,
                @loadingProduct.PositionY + @loadingProduct.Product.Height/2,
                @loadingProduct.PositionZ + @loadingProduct.Product.Width/2
                    );

                    scene.add(productMesh);
            </text>
        }

            // Добавляем оси координат для ориентации
            var axesHelper = new THREE.AxesHelper(5);
            scene.add(axesHelper);

            // Функция анимации
            function animate() {
                requestAnimationFrame(animate);
                controls.update();
                renderer.render(scene, camera);
            }

            // Запускаем анимацию
            animate();

            // Обработка изменения размера окна
            window.addEventListener('resize', function() {
                var width = container.clientWidth;
                var height = container.clientHeight;

                camera.aspect = width / height;
                camera.updateProjectionMatrix();

                renderer.setSize(width, height);
            });
        });
    </script>
}
 *@