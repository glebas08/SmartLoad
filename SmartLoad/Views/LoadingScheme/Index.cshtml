@model IEnumerable<SmartLoad.Models.LoadingScheme>

@{
    ViewData["Title"] = "Схемы погрузки";
}

<div class="container-fluid">
    <!-- Заголовок и описание модуля -->
    <div class="row mb-4">
        <div class="col-md-12">
            <h1 class="display-4">Схемы погрузки</h1>
            <p class="lead">Центральный модуль системы для управления схемами погрузки транспортных средств</p>
        </div>
    </div>

    <!-- Панель инструментов -->
    <div class="row mb-3">
        <div class="col-md-12">
            <div class="card">
                <div class="card-body d-flex justify-content-between align-items-center">
                    <div>
                        <h5 class="card-title mb-0">Управление схемами погрузки</h5>
                    </div>
                    <div class="btn-toolbar">
                        <div class="btn-group me-2">
                            <a asp-action="Create" class="btn btn-success">
                                <i class="fas fa-plus-circle me-1"></i> Добавить новую схему
                            </a>
                        </div>
                        <div class="btn-group">
                            <a href="javascript:window.location.reload()" class="btn btn-secondary">
                                <i class="fas fa-sync-alt me-1"></i> Обновить список
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Фильтры и поиск 
    <div class="row mb-3">
        <div class="col-md-12">
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="input-group">
                                <input type="text" id="searchInput" class="form-control" placeholder="Поиск по таблице...">
                                <button class="btn btn-outline-secondary" type="button" id="searchButton">
                                    <i class="fas fa-search"></i>
                                </button>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <select id="statusFilter" class="form-select">
                                <option value="">Все статусы</option>
                                <option value="Создана">Создана</option>
                                <option value="В процессе">В процессе</option>
                                <option value="Завершена">Завершена</option>
                                <option value="Ошибка">Ошибка</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <select id="dateFilter" class="form-select">
                                <option value="">Все даты</option>
                                <option value="today">Сегодня</option>
                                <option value="week">Эта неделя</option>
                                <option value="month">Этот месяц</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <button id="resetFilters" class="btn btn-outline-secondary w-100">Сбросить</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
	</div>-->

    <!-- Интерактивная таблица схем погрузки -->
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-body">
                    <div class="table-responsive">
                        <table id="loadingSchemesTable" class="table table-striped table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th class="sortable" data-sort="id">ID <i class="fas fa-sort"></i></th>
                                    <th class="sortable" data-sort="vehicle">Транспортное средство <i class="fas fa-sort"></i></th>
                                    <th class="sortable" data-sort="route">Маршрут <i class="fas fa-sort"></i></th>
                                    <th class="sortable" data-sort="date">Дата загрузки <i class="fas fa-sort"></i></th>
                                    <th class="sortable" data-sort="status">Статус <i class="fas fa-sort"></i></th>
                                    <th>Действия</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    string rowClass = string.Empty;

                                    // Если есть неразмещённые блоки или статус содержит ошибку
                                    if (item.Status.Contains("Ошибка") ||
                                    item.LoadingSchemeItems.Any(i => i.PositionX < 0 || i.PositionY < 0 || i.PositionZ < 0))
                                    {
                                        rowClass = "table-danger"; // Красное выделение строки
                                    }
                                    <tr>
                                        <td>@item.Id</td>
                                        <td>@(item.Vehicle?.Name ?? "Не указано")</td>
                                        <td>@(item.Rout?.Name ?? "Не указано")</td>
                                        <td>@item.LoadingDate.ToString("dd.MM.yyyy HH:mm")</td>
                                        <td>
                                            @{
                                                string badgeClass = "bg-secondary";
                                                if (item.Status.Contains("Создана")) badgeClass = "bg-success";
                                                else if (item.Status.Contains("В процессе")) badgeClass = "bg-primary";
                                                else if (item.Status.Contains("Ошибка")) badgeClass = "bg-danger";
                                                else if (item.Status.Contains("Завершена")) badgeClass = "bg-info";
                                            }
                                            <span class="badge @badgeClass">@item.Status</span>
                                        </td>
                                        <td>
                                            <div class="btn-group">
                                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">
                                                    <i class="fas fa-info-circle"></i> Детали
                                                </a>
                                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">
                                                    <i class="fas fa-edit"></i> Редактировать
                                                </a>
                                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">
                                                    <i class="fas fa-trash"></i> Удалить
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Пагинация -->
    <div class="row mt-3">
        <div class="col-md-12">
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    <li class="page-item disabled">
                        <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Предыдущая</a>
                    </li>
                    <li class="page-item active"><a class="page-link" href="#">1</a></li>
                    <li class="page-item"><a class="page-link" href="#">2</a></li>
                    <li class="page-item"><a class="page-link" href="#">3</a></li>
                    <li class="page-item">
                        <a class="page-link" href="#">Следующая</a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Сортировка таблицы
            $('.sortable').click(function() {
                var table = $(this).parents('table').eq(0);
                var rows = table.find('tr:gt(0)').toArray().sort(comparer($(this).index()));
                this.asc = !this.asc;
                if (!this.asc) {
                    rows = rows.reverse();
                }
                for (var i = 0; i < rows.length; i++) {
                    table.append(rows[i]);
                }

                // Обновляем иконки сортировки
                table.find('th.sortable i').removeClass('fa-sort-up fa-sort-down').addClass('fa-sort');
                if (this.asc) {
                    $(this).find('i').removeClass('fa-sort').addClass('fa-sort-up');
                } else {
                    $(this).find('i').removeClass('fa-sort').addClass('fa-sort-down');
                }
            });

            function comparer(index) {
                return function(a, b) {
                    var valA = getCellValue(a, index);
                    var valB = getCellValue(b, index);
                    return $.isNumeric(valA) && $.isNumeric(valB) ? valA - valB : valA.localeCompare(valB);
                };
            }

            function getCellValue(row, index) {
                return $(row).children('td').eq(index).text();
            }

            // Фильтрация по статусу
            $('#statusFilter').change(function() {
                var status = $(this).val().toLowerCase();
                $('#loadingSchemesTable tbody tr').filter(function() {
                    $(this).toggle(status === '' || $(this).children('td').eq(4).text().toLowerCase().indexOf(status) > -1);
                });
            });

            // Поиск по таблице
            $('#searchInput').on('keyup', function() {
                var value = $(this).val().toLowerCase();
                $('#loadingSchemesTable tbody tr').filter(function() {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
                });
            });

            // Сброс фильтров
            $('#resetFilters').click(function() {
                $('#searchInput').val('');
                $('#statusFilter').val('');
                $('#dateFilter').val('');
                $('#loadingSchemesTable tbody tr').show();
            });
        });
    </script>
}
