@model SmartLoad.Models.Rout

<h1>Добавить маршрут</h1>

<form asp-action="AddRoute" method="post">
    <!-- Название маршрута -->
    <div class="form-group">
        <label asp-for="Name" class="control-label">Название маршрута</label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <!-- Даты маршрута -->
    <div class="form-group">
        <label asp-for="DepartureDate" class="control-label">Дата отправления</label>
        <input asp-for="DepartureDate" class="form-control" type="date" />
        <span asp-validation-for="DepartureDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="ArrivalDate" class="control-label">Дата прибытия</label>
        <input asp-for="ArrivalDate" class="form-control" type="date" />
        <span asp-validation-for="ArrivalDate" class="text-danger"></span>
    </div>

    <!-- Таблица для точек маршрута -->
    <h2>Точки маршрута</h2>
    <table class="table">
        <thead>
            <tr>
                <th>Название точки</th>
                <th>Заказ</th>
                <th>Порядок</th>
                <th>Действия</th>
            </tr>
        </thead>
        <tbody id="routePointsTableBody">
            <!-- Здесь будут добавляться строки точек маршрута -->
        </tbody>
    </table>

    <button type="button" class="btn btn-success" id="addRoutePointRow">Добавить точку маршрута</button>

    <!-- Примечания -->
    <div class="form-group">
        <label asp-for="Notes" class="control-label">Примечания</label>
        <textarea asp-for="Notes" class="form-control"></textarea>
        <span asp-validation-for="Notes" class="text-danger"></span>
    </div>

    <div class="form-group mt-3">
        <button type="submit" class="btn btn-primary">Сохранить</button>
        <a href="@Url.Action("Routes", "Route")" class="btn btn-secondary">Отмена</a>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const addRoutePointButton = document.getElementById('addRoutePointRow');
            const tableBody = document.getElementById('routePointsTableBody');
            let routePointIndex = 0;

            addRoutePointButton.addEventListener('click', function () {
                const newRow = document.createElement('tr');
                newRow.innerHTML = `
                    <td>
                        <select name="selectedRoutePointIds" class="form-control routePointSelect" onchange="updateOrder(this, ${routePointIndex})">
                            <option value="">Выберите точку маршрута</option>
        @foreach (var routePoint in ViewBag.AvailableRoutePoints as List<SmartLoad.Models.RoutePoint>)
        {
                                    <option value="@routePoint.Id">@routePoint.Name</option>
        }
                        </select>
                    </td>
                    <td>
                        <input type="text" class="form-control orderName" readonly />
                        <input type="hidden" class="orderId" value="" />
                    </td>
                    <td>
                        <input type="number" name="orderInRoute" class="form-control orderNumber" value="${routePointIndex + 1}" min="1" />
                    </td>
                    <td>
                        <button type="button" class="btn btn-danger removeRoutePointRow">Удалить</button>
                    </td>
                `;
                tableBody.appendChild(newRow);
                newRow.querySelector('.removeRoutePointRow').addEventListener('click', function () {
                    tableBody.removeChild(newRow);
                    updateOrderNumbers(); // Обновляем порядковые номера после удаления
                });
                routePointIndex++;
            });

            // Функция для обновления порядковых номеров
            function updateOrderNumbers() {
                const orderInputs = document.querySelectorAll('.orderNumber');
                orderInputs.forEach((input, index) => {
                    input.value = index + 1;
                });
            }
        });

        function updateOrder(selectElement, index) {
            const selectedId = selectElement.value;
            const row = selectElement.closest('tr');
            const orderNameInput = row.querySelector('.orderName');
            const orderIdInput = row.querySelector('.orderId');

            if (selectedId) {
                $.ajax({
                    url: '@Url.Action("GetOrderByRoutePoint", "Route")',
                    type: 'GET',
                    data: { routePointId: selectedId },
                    success: function (data) {
                        orderNameInput.value = data.name;
                        orderIdInput.value = data.id;
                    }
                });
            } else {
                orderNameInput.value = '';
                orderIdInput.value = '';
            }
        }
    </script>
}



@* @model SmartLoad.Models.Rout
<h1>Добавить маршрут</h1>
<form asp-action="AddRoute" method="post">
    <!-- Название маршрута -->
    <div class="form-group">
        <label asp-for="Name" class="control-label">Название маршрута</label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <!-- Даты маршрута -->
    <div class="form-group">
        <label asp-for="DepartureDate" class="control-label">Дата отправления</label>
        <input asp-for="DepartureDate" class="form-control" type="date" />
        <span asp-validation-for="DepartureDate" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="ArrivalDate" class="control-label">Дата прибытия</label>
        <input asp-for="ArrivalDate" class="form-control" type="date" />
        <span asp-validation-for="ArrivalDate" class="text-danger"></span>
    </div>

    <!-- Таблица для точек маршрута -->
    <h2>Точки маршрута</h2>
    <table class="table">
        <thead>
            <tr>
                <th>Название точки</th>
                <th>Действия</th>
            </tr>
        </thead>
        <tbody id="routePointsTableBody">
            <!-- Здесь будут добавляться строки точек маршрута -->
        </tbody>
    </table>
    <button type="button" class="btn btn-success" id="addRoutePointRow">Добавить точку маршрута</button>

    <!-- Примечания -->
    <div class="form-group">
        <label asp-for="Notes" class="control-label">Примечания</label>
        <textarea asp-for="Notes" class="form-control"></textarea>
        <span asp-validation-for="Notes" class="text-danger"></span>
    </div>

    <div class="form-group mt-3">
        <button type="submit" class="btn btn-primary">Сохранить</button>
        <a href="@Url.Action("Routes", "Route")" class="btn btn-secondary">Отмена</a>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const addRoutePointButton = document.getElementById('addRoutePointRow');
            const tableBody = document.getElementById('routePointsTableBody');
            let routePointIndex = 0;

            addRoutePointButton.addEventListener('click', function () {
                const newRow = document.createElement('tr');
                newRow.innerHTML = `
                    <td>
                        <select name="RoutePoints[${routePointIndex}].Id" class="form-control" onchange="updateRoutePointName(this, ${routePointIndex})">
                            <option value="">Выберите точку маршрута</option>
        @foreach (var routePoint in ViewBag.AvailableRoutePoints as List<SmartLoad.Models.RoutePoint>)
        {
                                    <option value="@routePoint.Id">@routePoint.Name</option>
        }
                        </select>
                        <input type="hidden" name="RoutePoints[${routePointIndex}].Name" value="" />
                    </td>
                    <td>
                        <button type="button" class="btn btn-danger removeRoutePointRow">Удалить</button>
                    </td>
                `;
                tableBody.appendChild(newRow);

                newRow.querySelector('.removeRoutePointRow').addEventListener('click', function () {
                    tableBody.removeChild(newRow);
                });

                routePointIndex++;
            });
        });

        function updateRoutePointName(selectElement, index) {
            const selectedId = selectElement.value;
            const routePointNameInput = document.querySelector(`input[name="RoutePoints[${index}].Name"]`);
            if (selectedId) {
                const selectedOption = selectElement.options[selectElement.selectedIndex];
                routePointNameInput.value = selectedOption.text;
            } else {
                routePointNameInput.value = '';
            }
        }
    </script>
} *@
@* 

@model SmartLoad.Models.Rout
<h1>Добавить маршрут</h1>
<form asp-action="AddRoute" method="post">
    <!-- Название маршрута -->
    <div class="form-group">
        <label asp-for="Name" class="control-label">Название маршрута</label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <!-- Даты маршрута -->
    <div class="form-group">
        <label asp-for="DepartureDate" class="control-label">Дата отправления</label>
        <input asp-for="DepartureDate" class="form-control" type="date" />
        <span asp-validation-for="DepartureDate" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="ArrivalDate" class="control-label">Дата прибытия</label>
        <input asp-for="ArrivalDate" class="form-control" type="date" />
        <span asp-validation-for="ArrivalDate" class="text-danger"></span>
    </div>

    <!-- Таблица для точек маршрута -->
    <h2>Точки маршрута</h2>
    <table class="table">
        <thead>
            <tr>
                <th>Название точки</th>
                <th>Заказ</th>
                <th>Действия</th>
            </tr>
        </thead>
        <tbody id="routePointsTableBody">
            <!-- Здесь будут добавляться строки точек маршрута -->
        </tbody>
    </table>
    <button type="button" class="btn btn-success" id="addRoutePointRow">Добавить точку маршрута</button>

    <!-- Примечания -->
    <div class="form-group">
        <label asp-for="Notes" class="control-label">Примечания</label>
        <textarea asp-for="Notes" class="form-control"></textarea>
        <span asp-validation-for="Notes" class="text-danger"></span>
    </div>

    <div class="form-group mt-3">
        <button type="submit" class="btn btn-primary">Сохранить</button>
        <a href="@Url.Action("Routes", "Route")" class="btn btn-secondary">Отмена</a>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const addRoutePointButton = document.getElementById('addRoutePointRow');
            const tableBody = document.getElementById('routePointsTableBody');
            let routePointIndex = 0;

            addRoutePointButton.addEventListener('click', function () {
                const newRow = document.createElement('tr');
                newRow.innerHTML = `
                    <td>
                        <select name="RoutePoints[${routePointIndex}].Id" class="form-control" onchange="updateOrder(this, ${routePointIndex})">
                            <option value="">Выберите точку маршрута</option>
        @foreach (var routePoint in ViewBag.AvailableRoutePoints as List<SmartLoad.Models.RoutePoint>)
        {
                                    <option value="@routePoint.Id">@routePoint.Name</option>
        }
                        </select>
                        <input type="hidden" name="RoutePoints[${routePointIndex}].Name" value="" />
                    </td>
                    <td>
                        <input type="text" name="RoutePoints[${routePointIndex}].OrderName" class="form-control" readonly />
                        <input type="hidden" name="RoutePoints[${routePointIndex}].OrderId" value="" />
                    </td>
                    <td>
                        <button type="button" class="btn btn-danger removeRoutePointRow">Удалить</button>
                    </td>
                `;
                tableBody.appendChild(newRow);

                newRow.querySelector('.removeRoutePointRow').addEventListener('click', function () {
                    tableBody.removeChild(newRow);
                });

                routePointIndex++;
            });
        });

        function updateOrder(selectElement, index) {
            const selectedId = selectElement.value;
            const orderNameInput = document.querySelector(`input[name="RoutePoints[${index}].OrderName"]`);
            const orderIdInput = document.querySelector(`input[name="RoutePoints[${index}].OrderId"]`);
            if (selectedId) {
                $.ajax({
                    url: '@Url.Action("GetOrderByRoutePoint", "Route")',
                    type: 'GET',
                    data: { routePointId: selectedId },
                    success: function (data) {
                        orderNameInput.value = data.name;
                        orderIdInput.value = data.id;
                    }
                });
            } else {
                orderNameInput.value = '';
                orderIdInput.value = '';
            }
        }
    </script>
}
 *@